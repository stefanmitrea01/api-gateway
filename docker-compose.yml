services:
    # PHP Service
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: api-gateway-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        depends_on:
            - mysql
            - redis
        environment:
            DB_CONNECTION: mysql
            DB_HOST: ${DB_HOST}
            DB_PORT: "${DB_PORT:-3306}"
            DB_DATABASE: ${DB_DATABASE}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
        networks:
            - api-gateway-network

    # Nginx Service
    web:
        image: nginx:latest
        container_name: api-gateway-web
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - ./:/var/www
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - api-gateway-network

    # MySQL Service
    mysql:
        image: mysql:8.0
        container_name: api-gateway-db
        restart: unless-stopped
        ports:
            - "3307:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD:-password}"
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - api-gateway-network
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            interval: 10s
            timeout: 5s
            retries: 5


    # Redis
    redis:
        container_name: api-gateway-redis
        image: redis:latest
        command: --port ${REDIS_PORT}
        ports:
            - "${REDIS_PORT:-6378}:6378"
        networks:
            - api-gateway-network

# Networks
networks:
    api-gateway-network:
        driver: bridge

# Volumes
volumes:
    dbdata:
